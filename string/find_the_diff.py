# Source: https://leetcode.com/problems/find-the-difference/

# Find the Difference
# At a lemonade stand, each lemonade costs $5.

# Given two strings s and t which consist of only lowercase letters.

# String t is generated by random shuffling string s and then
# add one more letter at a random position.

# Find the letter that was added in t.

# Example:

# Input:
# s = "abcd"
# t = "abcde"

# Output:
# e

# Explanation:
# 'e' is the letter that was added.

# Runtime: 44 ms, faster than 43.74% of Python3 online submissions for Find the Difference.
# Memory Usage: 13.8 MB, less than 10.00% of Python3 online submissions for Find the Difference.

import unittest # unit test framework
from typing import List

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        s_list = sorted(s)
        t_list = sorted(t)
        for i in range(len(s_list)):
            if s_list[i] != t_list[i]:
                return t_list[i]
        return t_list[-1]




a = Solution
class Test(unittest.TestCase):

    def test_diff_at_end(self):
        self.assertEqual(a.findTheDifference(self,"abcd", "abcde"), "e")

    def test_diff_at_begin(self):
        self.assertEqual(a.findTheDifference(self,"bcd", "abcd"), "a")

    def test_diff_at_2nd_to_last(self):
        self.assertEqual(a.findTheDifference(self,"bce", "bcde"), "d")

    def test_empty(self):
        self.assertEqual(a.findTheDifference(self,"", "a"), "a")

if __name__ == '__main__':
    unittest.main()

